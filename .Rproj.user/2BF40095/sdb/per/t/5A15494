{
    "collab_server" : "",
    "contents" : "# DELTA NET\n# Looking at network differences based on correlation changes between variables\ndiffnet <- function(data,\n                 group1,\n                 group2,\n                 correlation_type=c(\"pearson\",\"spearman\"),\n                 correlation_thr,\n                 p_thr,\n                 variable_names)\n{\n\n  # if(!require(Hmisc,quietly = TRUE)) install.packages(\"Hmisc\")\n\n  # function argument checks ----\n  if(missing(correlation_type)) correlation_type <- \"spearman\"\n  if(missing(p_thr)) p_thr <- 0.05\n  if(missing(correlation_thr)) correlation_thr <- 0.8\n  # if(missing(variable_names) & !is.null(rownames(data))) {\n  #   variable_names <- rownames(data)\n  # } else {\n  #   variable_names <- seq(1,nrow(data))\n  # }\n  if(missing(variable_names)) stop(\"Need variable names.\")\n  if(missing(group1) | missing(group2)) stop(\"Need group identification.\")\n\n\n  # compute correlations ----\n  x1 <- rcorr(t(data[,group1]),type = correlation_type)\n  r1 <- x1[[1]]\n  pr1 <- x1[[3]]\n\n  x2 <- rcorr(t(data[,group2]),type = correlation_type)\n  r2 <- x2[[1]]\n  pr2 <- x2[[3]]\n\n  # define interactions ----\n  interaction_ids <- which(upper.tri(pr1))\n  g1 <- ceiling(interaction_ids / nrow(data))\n  g2 <- interaction_ids %% nrow(data)\n\n  # because it's correlations, upper triangular is sufficient\n  r1 <- r1[interaction_ids]\n  pr1 <- pr1[interaction_ids]\n  r2 <- r2[interaction_ids]\n  pr2 <- pr2[interaction_ids]\n\n  # fix nas ----\n  r1[which(is.na(r1))] <- 0\n  pr1[which(is.na(r1))] <- 1\n  r2[which(is.na(r2))] <- 0\n  pr2[which(is.na(r2))] <- 1\n\n  # multiple correction of p values ----\n  adj_pr1 <- p.adjust(pr1,\"fdr\")\n  adj_pr2 <- p.adjust(pr2,\"fdr\")\n\n  # interactions ----\n  n1 <- matrix(0,nrow=length(r1),1)\n  n2 <- matrix(0,nrow=length(r2),1)\n\n  n1[which(adj_pr1 < p_thr & abs(r1) > correlation_thr)] <- 1\n  n2[which(adj_pr2 < p_thr & abs(r2) > correlation_thr)] <- 1\n\n  # scoring ----\n  # to decode things:\n  # S = 1: edge is present in both networks with the same sign\n  # S = 2: edge is present in only 1 network\n  # S = 3: edge is present in both networks but sign changed\n  # D: difference in correlation\n  # C = 1: same sign\n  # C = 2: loss of edge\n  # C = 3: gain of edge\n  # C = 4: change of sign\n  # N = n1 + n2\n  D <- abs(r1 - r2)\n  S <- matrix(0,nrow=nrow(n1),1)\n  C <- matrix(0,nrow=nrow(n1),1)\n\n  S[which(n1 == 1 & n2 == 1 & r1 > 0 & r2 > 0)] = 1\n  C[which(n1 == 1 & n2 == 1 & r1 > 0 & r2 > 0)] = 1 # edge present, same sign\n  S[which(n1 == 1 & n2 == 1 & r1 < 0 & r2 < 0)] = 1\n  C[which(n1 == 1 & n2 == 1 & r1 < 0 & r2 < 0)] = 1 # edge present, same sign\n\n  S[which(n1 == 1 & n2 == 1 & r1 > 0 & r2 < 0)] = 3\n  C[which(n1 == 1 & n2 == 1 & r1 > 0 & r2 < 0)] = 4 # edge present, change of sign\n  S[which(n1 == 1 & n2 == 1 & r1 < 0 & r2 > 0)] = 3\n  C[which(n1 == 1 & n2 == 1 & r1 < 0 & r2 > 0)] = 4 # edge present, change of sign\n\n  S[which(n1 == 1 & n2 == 0)] = 2\n  C[which(n1 == 1 & n2 == 0)] = 2 # loss of edge\n  S[which(n1 == 0 & n2 == 1)] = 2\n  C[which(n1 == 0 & n2 == 1)] = 3 # gain of edge\n\n\n  # pvalue for differences ----\n  xx1 <- 0.5 * log((1 + r1) / (1 - r1))\n  xx2 <- 0.5 * log((1 + r2) / (1 - r2))\n\n  df1 <- 1 / (length(group1) - 3)\n  df2 <- 1 / (length(group2) - 3)\n\n  diff <- xx1 - xx2\n\n  z <- diff / sqrt(df1 + df2)\n\n  p_val <- 2 * pnorm(-abs(z))\n  logPval <- -log10(p_val)\n  logPval[logPval == Inf] <- ceiling(max(logPval[logPval != Inf]))\n\n  # clean interactions ----\n  # ignore interactions with score 0\n  nix <- which(S == 0)\n  nix <- union(nix,which(D == 0))\n  # N <- N[-nix]\n  S <- S[-nix]\n  C <- C[-nix]\n  D <- D[-nix]\n  p_val <- p_val[-nix]\n  logPval <- logPval[-nix]\n  r1 <- r1[-nix]\n  pr1 <- pr1[-nix]\n  r2 <- r2[-nix]\n  pr2 <- pr2[-nix]\n  interaction_ids <- interaction_ids[-nix]\n  g1 <- g1[-nix]\n  g2 <- g2[-nix]\n\n  # var.ints <- paste(varNames[g1],\" :: \",varNames[g2],sep=\"\")\n  total_score <- abs(r1) + abs(r2) + S + C + logPval\n\n  X <- data_frame(node1 = variable_names[g1],\n                  node2 = variable_names[g2],\n                  correlation_group1 = r1,\n                  correlation_group2 = r2,\n                  correlation_difference = D,\n                  difference_pval = p_val,\n                  edge_score = S,\n                  edge_class = C,\n                  logPval = logPval,\n                  total_score = total_score)\n\n  return(X)\n}\n",
    "created" : 1526955474192.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1752202725",
    "id" : "5A15494",
    "lastKnownWriteTime" : 1527039638,
    "last_content_update" : 1527039638771,
    "path" : "~/Desktop/diffnet/R/diffnet.R",
    "project_path" : "R/diffnet.R",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}